use super::*;

#[rustfmt::skip]
pub fn rv32a() -> Vec<InstPattern> {
  vec![
  InstPattern::new("lr.w", "00010?? 00000 ????? 010 ????? 01011 11", Instruction::Register(RegisterType::LR_W)),
  InstPattern::new("sc.w", "00011?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::SC_W)),
  InstPattern::new("amoswap.w", "00001?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOSWAP_W)),
  InstPattern::new("amoadd.w", "00000?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOADD_W)),
  InstPattern::new("amoxor.w", "00100?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOXOR_W)),
  InstPattern::new("amoand.w", "01100?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOAND_W)),
  InstPattern::new("amoor.w", "01000?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOOR_W)),
  InstPattern::new("amomin.w", "10000?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOMIN_W)),
  InstPattern::new("amomax.w", "10100?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOMAX_W)),
  InstPattern::new("amoninu.w", "11000?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMONINU_W)),
  InstPattern::new("amomaxu.w", "11100?? ????? ????? 010 ????? 01011 11", Instruction::Register(RegisterType::AMOMAXU_W)),
  ]
}

#[rustfmt::skip]
pub fn rv64a() -> Vec<InstPattern> {
  let mut a = vec![
  InstPattern::new("lr.d", "00010?? 00000 ????? 011 ????? 01011 11", Instruction::Register(RegisterType::LR_D)),
  InstPattern::new("sc.d", "00011?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::SC_D)),
  InstPattern::new("amoswap.d", "00001?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOSWAP_D)),
  InstPattern::new("amoadd.d", "00000?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOADD_D)),
  InstPattern::new("amoxor.d", "00100?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOXOR_D)),
  InstPattern::new("amoand.d", "01100?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOAND_D)),
  InstPattern::new("amoor.d", "01000?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOOR_D)),
  InstPattern::new("amomin.d", "10000?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOMIN_D)),
  InstPattern::new("amomax.d", "10100?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOMAX_D)),
  InstPattern::new("amoninu.d", "11000?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOMINU_D)),
  InstPattern::new("amomaxu.d", "11100?? ????? ????? 011 ????? 01011 11", Instruction::Register(RegisterType::AMOMAXU_D)),
  ];
  a.extend(rv32a());
  a
}
